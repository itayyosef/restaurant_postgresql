Itay Yosef

--- המלצת השף : האתר נראה הכי טוב בין 70% ל 100% מרוחב המסך ---

GITHUB link - https://github.com/itayyosef/Project-restaurant.git

פרטי משתמש מנהל
username : kobi
password : 123

הסבר על המשימה :

מסעדה החליטה לפתוח שירות משלוחים אינטרנים , שבפרוייקט נדרש לפתח מערכת ניהול משלוחים ואתר הזמנות ללקוח.

יכולות של האתר מסעדה : 

.משתמשים (לקוחות) רשומים יכולים להרשם לאתר ולהזמין עגלה מתוך הרשימה של המנות שמוצגות באתר , לאחר מכן יכולים לאשר את ההזמנה וליצור משלוח

: משתמשי מנהל (צוות העובדים) מתחברים לאתר הבק אופיס שבו הם יכולים לבצע שינויים כגון

1. לשנות את סטאטוס המשלוחים לאחר השלמת המשלוח

2. לערוך את רשימת הקטגוריות , להוסיף , לשנות פרטים  לפי הנדרש , למחוק קטגוריות מהאתר ביחד עם המנות שצמודות לקטגוריה 

3. לערוך את רשימת המנות באתר , להוסיף , לשנות פרטים או קטגוריה לפי הנדרש  ולמחוק מנות מהאתר

----------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------

הסבר על המודלים :
: MODELS-המודלים בפרוייקט בנויים בצורה כזאת

User to Cart - One to Many , למשתמש יכולות להיות הרבה עגלות (אחת בכל רגע נתון) ועגלה יכול להיות רק משתמש אחד

Cart to Delivery - One to One , לעגלה יכול להיות משלוח אחד ולמשלוח יכולה להיות רק עגלה אחת

Cart to Items - One to Many , בעגלה אחת יכול להיות הרבה פריטים ופריטים יכול להיות רק בעגלה אחת

Dish to Items - One to Many , פריט מייצג מנה שלקוח הוסיף לעגלה שלו , מנה יכולה להיות רק פריט אחד ופריט אחד יכול להיות הרבה סוגים של מנות

*
Dish to Cart - Many to Many , יוצרים יחסים של רבים לרבים בין מנה לעגלה , הרבה פריטים יכולים להכנס לעגלה ופריט יכול להיות בהרבה עגלות Items - היחסי אחד לרבים

Category to Dish - One to Many ,  קטגוריה אחת יכולה להיות שייכת להרבה מנות ומנה יכולה להיות שייכת רק לקטגוריה אחת

יש שדות Cart-ל


id - INT (PK),
user_id - INT (FK),
delivery_id - INT (FK),
delivery - relationship to delivery,
items - relationship to items,
finishd_order - INT,


יש שדות Category-ל


id - INT (PK),
category_name - String,
image_url - String,
dishes - relationship to Dish,


יש שדות Delivery-ל


id - INT (PK),
is_delivered - BOOL,
address - String,
comments - String,
phone_for_delivery - String,
created - Datetime (now),


יש שדות Dish-ל


id - INT (PK),
dish_name - String,
price - Float,
description - String,
imageURL - String,
is_gluten_free - BOOL,
is_vegetarian - BOOL,
category_id - INT (FK),
item - relationship to Items,


יש שדות Items-ל


id - INT (PK),
dish_id - INT (FK),
cart_id - INT (FK),
amount - INT,


יש שדות User-ל


id - INT (PK)
username - String
password - String
first_name - String
last_name - String
is_staff - BOOL 
email - String
carts - relationship to Cart

----------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------

: TEMPLATES-הסבר על ה

טמפלייטים כלליים 

NAVBAR.HTML + LAYOUT.HTML :

מחולק לתצוגות ויכולות שונות לפי אם המשתמש מחובר , לא מחובר , או מחובר וחלק מצוות העובדים navbar-אחד כשה navbar + layout בפרוייקט יש

MAIN_PAGE.HTML : דף נחיתה

שאליו מיועדים לקוחות מחוברים main_page_auth מיועד לקוחות לא מחוברים עם הסבר כללי על המסעדה עם תמונה ודף בית main_page-בפרוייקט יש 2 דפי בית כש 

בודק אם המשתמש הוא לקוח עם סטאטוס מנהל או לא ומציג תצוגה אחרת על פי היכולות של המשתמש , אם לא מנהל , יציג אתר נחיתה עם הסבר על המסעדה ותמונה  main_page_auth.html

אם המשתמש מנהל , יוביל אותו לדף נחיתה עם הסבר על יכולות המנהל באתר ולינקים.

----------------------------------------------------------------------------------------------------------------------

טמפלייטים שקשורים לעגלה :

ONE_CART.HTML : תצוגה של עגלה |  גישה רק למשתמשים שאינם מנהלים

בדף הזה יש תצוגה של עגלה אחת , צעד אחד לפני אישור הזמנה , בדף זה הלקוח יוכל להסיר פריטים מההזמנה , לשנות כמות של פריטים בעגלה ולאשר משלוח באמצעות מילוי פרטי משלוח

----------------------------------------------------------------------------------------------------------------------

טמפלייטים שקשורים למנות : 

ALL_DISHES.HTML : תצוגה של כל המנות באתר | גישה רק למשתמשים שאינם מנהלים

בדף הזה אפשר לראות את כל המנות באתר והלקוח יכול לבחור איזה מנות רוצה להוסיף להזמנה וכמה מהמנה ,  ובנוסף יש לינקים לראות פרטי משתמש והזמנה , ואפשרות לצפות בעגלה שלו

DISHES_BY_CATEGORY.HTML : גישה רק למשתמשים שאינם מנהלים | תצוגה על פי קטגוריות

בדף הזה אפשר לראות את המנות ששיכות לקטגוריה שהמשתמש בחר בנוסף להוסיף לעגלה באותה צורה לפי סוג מנה והכמות הרצויה , ולינקים לניווט

MANAGE_DISHES.HTML : תצוגה של כל המנות | גישה רק למשתמשי מנהל

בדף זה משתמשי מנהל יכולים לצפות בכל המנות וליד כל מנה יש פרטים עליה עם 2 כפתורים : מחק מנה ושנה פרטים

בנוסף יש כפתור יצירת מנה חדשה

CREATE_DISH.HTML : תצוגה של טופס ליצירת מנה | גישה רק למשתמשי מנהל

בדף הזה יש אפשרות ליצור מנה חדשה בצירוף לקטגוריה קיימת על ידי מילוי פרטים

EDIT_DISH.HTML : תצוגה של טופס לשינוי פרטים מנה | גישה רק למשתמשי מנהל

בדף הזה יש אפשרות לשנות את כל פרטי המנה , וכפתור לשמירה

DISH_DELETE_CONFIRM.HTML : אישור מחיקה של מנה | גישה רק למשתמש מנהל

בדף הזה המערכת תשאל את המשתמש אם הוא בטוח שרוצה למחוק את המנה מהתפריט של המסעדה , ולינקי ניווט

----------------------------------------------------------------------------------------------------------------------

טמפלייטים שקשורים לקטגוריות

MANAGE_CATEGORIES.HTML : תצוגה של כל הקטגוריות באתר |  גישה רק למשתמשי מנהל

בדף הזה יש אפשרות לצפות בכל הקטגוריות במסעדה עם אפשרויות ניווט ליצירת קטרוגיה חדשה , עריכת קטגוריה או מחיקה

CREATE_CATEGORY.HTML : תצוגת טופס ליצירה של קטגוריה | גישה רק למשתמשי מנהל

בדף הזה יש אפשרות ליצור קטגוריה חדשה על ידי מילוי פרטים 

EDIT_CATEGORY.HTML : תצוגה של טופס לשינוי פרטי קטגוריה | גישה רק למשתמשי מנהל

בדף הזה יש אפשרות לשנות פרטים בקטגוריה קיימת , וכפתור שמירה

CONFIRM_DELETE_CATEGORY.HTML : אישור מחיקה של מנה | גישה רק למשתמשי מנהל

בדף הזה המערכת תשאל את המשתמש אם הוא בטוח שרוצה למחוק את הקטגוריה מהתפריט של המסעדה ביחד עם כל המנות שקשורות אליו ויציג אותם , ולינקי ניווט

----------------------------------------------------------------------------------------------------------------------

טמפלייטים שקשורים למשלוחים

MANAGE_DELIVERIES.HTML : תצוגה של כל המשלוחים באתר | גישה רק למשתמשי מנהל

בדף הזה המנהל יוכל לצפות בכל המשלוחים שנעשו במסעדה עם פרטים על כל הלקוחות , עגלות ומשלוחים , בנוסף יש כפתור שינוי סטאטוס של ההזמנה במידה והמשלוח הסתיים

ONE_DELIVERY.HTML : תצוגה של המשלוח ללקוח  | גישה רק למשתמשים שאינם מנהלים

בדף הזה הלקוח יקבל מספר משלוח ובנוסף עוד פרטים על המשלוח כגון : זמן משלוח , סך לתשלום , הערות שלו וכתובת

----------------------------------------------------------------------------------------------------------------------

טמפלייטים שקשורים למשתמשים

SIGNUP.HTML + LOGIN.HTML : הרשמה והתחברות | למשתמשים מחוברים  מכל סוג אין גישה

לקוחות שלא מחוברים למערכת יכולים ליצור משתמש חדש  על ידי מילוי פרטי משתמש או להתחבר כדי שיוכלו לבצע הזמנות מהמסעדה

USER.HTML : תצוגת משתמש | גישה רק למשתמשים שאינם מנהלים

תצוגה כללית עם פרטים בסיסיים של הלקוח , שם פרטי , משפחה , שם משתמש , אימייל , וסטאטוס הזמנה אחרונה , ולינקי ניווט

ORDER_HISTORY.HTML : תצוגת היסטוריית ההזמנות של הלקוח | גישה רק למשתמשים שאינם מנהלים

בדף הזה הלקוח יכול לצפות בכל ההזמנות שלו ולראות את כל פרטי המשלוח שלו עם הסטאטוס

MAIN_PAGE_AUTH.HTML : תצוגה של דף נחיתה | תצוגה שונה למשתמשים שאינם מנהלים ולמנהלים

דף נחיתה שמציג הסבר קצר על המסעדה עם תמונה , ולינקי ניווט

EDIT_USER_DETAILS.HTML : תצוגת טופס לשינוי פרטים אישיים של הלקוח | גישה רק למשתמשים שאינם מנהלים

בדף הזה יש תצוגה של טופס לשינוי פרטי משתמש שבו המשתמש יכול לשנות את כל הפרטים ששמורים במערכת , אך חייב להזין סיסמא נוכחית כדי לבצע כל שינוי כלשהוא לווידוא

----------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------

CONTROLLERS-הסבר על ה

CARTS - פונקציות שקשורות ל

NEW_CART :

יצירת עגלה חדשה , הקוד בודק אם ללקוח יש עגלה פעילה קיימת ואם לא אז יוצר לו עגלה ברגע שלוחץ על פריט שרוצה להזמין שולח הודעה שהעגלה נוצרה בהצלחה
לאחר מכן יוצר אובייקט של פריט שמתווסף לעגלה על פי איי.די של עגלה ושל מנה , ושולח הודעה למשתמש שהמנה התווספה לעגלה בהצלחה

נוצר בלי  איי.די של משלוח כדי שהלקוח יוכל להמשיך להוסיף פריטים לעגלה ואז הלקוח יכול לאשדר

/cart : route - מתקשר ל

[ GET , POST ] שמקבל בקשות 

GET - מציג את הדף בפניה
POST - יצירת אובייקט של עגלה ושל פריט
 

SHOW_CART :

תצוגת עגלה נוכחית של הלקוח , הקוד בודק אם יש עגלה פעילה נוכחית , אם יש יוביל את הלקוח לתצוגה , ואם אין ישלח הודעה שללקוח אין לו עגלה פעילה


/show_cart : route-מתקשר ל

[ GET ] מקבל בקשות
GET - מציג את העגלה של הלקוח

UPDATE_ITEM :

אפשרות של הלקוח  על ידי כפתור לשנות כמות של הפריטים שרוצה לשים בעגלה , הקוד בודק על איזה פריט מדובר ומעדכן את הכמות על פי הטופס שנשלח ושולח הודעה ללקוח בהתאם

/update-item-status/<int:id> : route-מתקשר ל

[ POST ] מקבל בקשת
POST - מעדכן כמות רצויה של מוצרים בעגלה קיימת

DELETE_ITEM :

אפשרות של הלקוח על ידי כפתור להסיר פריט או מספר מנות מהעגלה , הקוד בודק על איזה פריט מדובר

ולאחר מכן בודק אם הפריט קיים ואם הוא שייך לאותה עגלה על ידי האיי.די של המשתמש כי למשתמש יכולה להיות רק עגלה אחת בכל זמן נתון ושולח הודעה למשתמש בהתאם

/delete-item/<int:id> : route-מתקשר ל

[ GET ]   מקבל בקשות
GET - מוחק פריט רצוי בפניה לראוט

CONFIRM_DELIVERY :

אפשרות של הלקוח לסגור את ההזמנה ולהוציא משלוח , בודק אם העגלה פעילה ויוצר אובייקט משלוח חדש , אם יש עגלה ויש פריטים בעגלה
אז האיי.די של המשלוח מצורף לעגלה המשוייכת של המשתמש והסטאטוס של העגלה משתנה להזמנה סגורה ושולח הודעות למשתמש בהתאם

/confirm-delivery : route-מתקשר ל

[ GET , POST ] - מקבל בקשות
GET - מציג את הדף של העגלה
POST - יצירת אובייקט של משלוח והצמדה שלו אל העגלה הנוכחית

----------------------------------------------------------------------------------------------------------------------

CATEGORIES - פונקציות שקשורות ל

"CRUD"

MANAGE_CATEGORIES :

הקוד בודק אם המשתמש מנהל , ואם כן מראה לו תצוגה של כל הקטגוריות עם אפשרויות יצירה מחיקה ושינוי קטגוריות קיימות , ומנהל מקבל הודעה בהתאם

/manage-categories : route-מתקשר ל

[ GET ] מקבל בקשת
GET - תצוגת כל הקטגוריות

DELETE_CATEGORY :

הקוד בודק אם המשתמש מנהל , ונותן למנהל אופציה למחוק קטגוריה עם כל המנות שבה כדי לשמור על אמינות מידע ואם מאשר , מוחק את המידע , ומנהל מקבל הודעה בהתאם

/delete-category/<int:id> : route-מתקשר ל

[ GET , POST ] - מקבל בקשות
GET - מציג הודעת ויידוי מחיקה של קטגוריה
POST - מחיקת אובייקט קטגוריה ביחד עם כל האובייקטים של המנות הקשורות אל הקטגוריה

EDIT_CATEGORY :

הקוד בודק אם המשתמש מנהל , ואם כן הפונקציה מקבלת טופס ובעזרתו משנה את פרטי הקטגוריה , ומנהל מקבל הודעה בהתאם

/edit-category/<int:id> : route-מתקשר ל

[ GET , POST ] - מקבל בקשות
GET - מציג את הטופס עדכון של הקטגוריה
POST - שליחת הטופס ושינוי הפרטים של הקטגוריה הרצויה


CREATE_CATEGORY :

הקוד בודק אם המשתמש מנהל , אם כן הפונקציה מקבלת טופס ויוצרת אובייקט קטגוריה חדש ושולחת הודעה למנהל בהתאם

/create-category : route-מתקשר ל

[ GET , POST ] - מקבל בקשות
GET - מציג את הטופס יצירה של הקטגוריה
POST - שליחת הטופס ויצירת אובייקט קטגוריה חדש

----------------------------------------------------------------------------------------------------------------------

DELIVERIES - פונקציות שקשורות ל

MANAGE_DELIVERIES :

cart הקוד בודק אם המשתמש מנהל , ואם כן מציג למנהל את כל המשלוחים עם כל הפרטים של המשתמש , משלוח , והזמנה , דרך מודל

/manage-deliveries : route-מתקשר ל

[ GET ] מקבל בקשת
GET - תצוגת כל המשלוחים


CHANGE_DELIVERY_STATUS :

הקוד בודק אם המשתמש מנהל , ואם כן (לאחר שהמנהל לחץ על כפתור שנה סטאטוס הזמנה בטמפלייט) , הקוד בודק אם יש עגלה , אם כן בודק אם הסטאטוס נשלח של העגלה הוא לא נשלח
ואם לא נשלח משנה את הסטאטוס לנשלח ושולח הודעה בהתאם


/change-delivery-status/<int:id> : route-מתקשר ל

[ GET , POST ] - מקבל בקשות
GET - redirect לפונקציה שמציגה את כל המשלוחים
POST - שינוי סטאטוס של המשלוח לנשלח אם העגלה קיימת

----------------------------------------------------------------------------------------------------------------------

DISHES - פונקציות שקשורות ל

ALL_DISHES :

הקוד בודק אם המשתמש מנהל , ואם לא שולח את הלקוח לדף עם התצוגה של כל המנות והקטגוריות

/dishes : route-מתקשר ל

[ GET ] מקבל בקשת
GET - תצוגת כל המנות


SHOW_BY_CATEGORY :

הקוד בודק אם המשתמש מנהל , ואם לא אז מציג ללקוח את כל המנות תחת קטגוריה ספיציפית שהלקוח בוחר

/dishes/category/<int:id> : route-מתקשר ל

[ GET ] מקבל בקשת
GET - תצוגת כל המנות לפי קטגוריות


"CRUD" -

MANAGE_DISHES :

הקוד בודק אם המשתמש מנהל , ואם כן מציג ללקוח את כל המנות במסעדה

/manage-dishes : route-מתקשר ל

[ GET ] - מקבל בקשת
GET - תצוגת כל המנות


CREATE_DISH :

בודק אם המשתמש מנהל , ואם כן לאחר שליחת המידע הפונקציה מייצרת מנה חדשה , ושולחת הודעה בהתאם למנהל

/create-dish : route-מתקשר ל

[ GET , POST ] - מקבל בקשות
GET - מציג טופס של יצירת מנה
POST - יצירת אובייקט של מנה

EDIT_DISH :

הקוד בודק אם המשתמש מנהל , ואם כן ולאחר שליחת המידע הפונקציה מעדכנת את כל הפרטים הרצויים אל האובייקט של המנה ושולחת הודעה בהתאם למנהל

/edit-dish/<int:id> : route-מתקשר ל

[ GET , POST ] - מקבל בקשות
GET - מציג טופס עדכון (שינוי פרטים) של מנה
POST -  שליחת הטופס ועדכון אובייקט של מנה

DELETE_DISH :

הקוד בודק אם המשתמש מנהל , ואם כן לאחר אישור מנהל הפונקציה תמחק את המנה שנבחרה מהתפריט ולא יהיה אפשר להזמין אותה , ותשלח הודעה בהתאם למנהל

/delete-dish/<int:id> : route-מתקשר ל

[ GET , POST ] - מקבל בקשות
GET - מציג הודעת ויידוי מחיקה של מנה
POST - מחיקת אובייקט מנה

----------------------------------------------------------------------------------------------------------------------

USERS - פונקציות שקשורות ל

NEW_SIGNUP :

הפונציה בודקת אם המשתמש מחובר ,  אם לא שולחת אותו לטופס הרשמה בסיסי שהמשתמש מכניס פרטים והמערכת יוצר אובייקט משתמש חדש ושולחת הודעה בהתאם

controllers-ובנוסף יש טופס הרשמה חיצוני שהקוד משתמש בו כדי לייצר את האובייקט ב

/signup : route-מתקשר ל

[ GET , POST ] - מקבל בקשות
GET - מציג טופס הרשמה לאתר
POST - שליחת הטופס לשרת ליצור משתמש חדש

LOGIN :

הפונקציה בודקת אם המשתמש מחובר , ואם לא שולחת אותו לטופס התחברות בסיסי שבו הלקוח ממלא שם מתשמש וסיסמא ויכול לבחור שהמערכת תשמור אותו מחובר או שלא
המערכת מחברת את המשתמש ושולחת הודעה בהתאם

/login : route-מתקשר ל

[ GET , POST ] - מקבל בקשות
GET - מציג טופס התחברות לאתר
POST - שליחת הטופס לשרת להתחברות למשתמש


SHOW_USER :

הקוד בודק אם המשתמש מחובר ואם אינו מנהל , ואם כן שולחת אותו לתצוגה של המשתמש עם פרטים עליו ועל ההזמנה האחרונה שלו דרך מודל העגלה

/user : route-מתקשר ל

[ GET ] - מקבל בקשות
GET - מציג פרטי משתמש

EDIT_USER_DETAILS :

הקוד בודק אם המשתמש מחובר ואם אינו מנהל , אם כן הלקוח יכול למלא פרטים לשינוי במשתמש שלו , המשתמש חייב למלא סיסמא כדי לשנות כל דבר שהוא בפרטים שלו למען ואלידציה
והמערכת שולחת הודעה ללקוח בהתאם

/edit_user_details : route-מתקשר ל
[ GET , POST ] - מקבל בקשות
GET - מציג טופס שינוי פרטי לקוח עם הפרטים הנוכחיים
POST - שליחת הטופס לשרת לשינוי הפרטים


ORDER_HISTORY : 

הקוד בודק אם המשתמש מחובר ואינו מנהל , ואם כן ממיינת את כל המשלוחים של המשתמש לפי האיי.די של המשתמש ומציגה את כל המשלוחים המשוייכים אליו

/order-history : route-מתקשר ל

[ GET ] - מקבל בקשות
GET - מציג את כל העגלות של הלקוח


LOGOUT : 

הקוד בודק אם המשתמש מחובר , ואם כן , מנתק אותו מהמערכת

/logout : route-מתקשר ל

[ GET ] - מקבל בקשות
GET - מנתק את הלקוח מהאתר

----------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------

UTILS בנוסף יש פונקציות כלליות ב